/* 아래 기본 제공된 코드를 수정 또는 삭제하고 본인이 코드를 사용하셔도 됩니다.
   단, 사용하는 클래스명이 Solution 이어야 하며, 가급적 Solution.java 를 사용할 것을 권장합니다.
   이러한 상황에서도 동일하게 java Solution 명령으로 프로그램을 수행해 볼 수 있습니다. */
import java.io.FileInputStream;
import java.util.Scanner;

class Solution6 {
	public static void main(String args[]) throws Exception	{
		//미궁속의 방 ... 점수 : 53.3
		/* 아래 메소드 호출은 앞으로 표준입력(키보드) 대신 input.txt 파일로 부터 읽어오겠다는 의미의 코드입니다.
		   만약 본인의 PC 에서 테스트 할 때는, 입력값을 input.txt에 저장한 후 이 코드를 첫 부분에 사용하면,
		   표준입력 대신 input.txt 파일로 부터 입력값을 읽어 올 수 있습니다.
		   또한, 본인 PC에서 아래 메소드를 사용하지 않고 표준입력을 사용하여 테스트하셔도 무방합니다.
		   단, Codeground 시스템에서 "제출하기" 할 때에는 반드시 이 메소드를 지우거나 주석(//) 처리 하셔야 합니다. */
		Scanner sc = new Scanner(new FileInputStream("input.txt"));
        
		//Scanner sc = new Scanner(System.in);

		int TC;
		int test_case;

		TC = sc.nextInt();        
		for(test_case = 1; test_case <= TC; test_case++) {
			// 이 부분에서 알고리즘 프로그램을 작성하십시오.
			int result = 1;	//처음에 1에 떨어짐. 
			int n = sc.nextInt();
			int N[][] = new int[n][n];	//이차원배열로할껀지 일차원으로 쭉 할건지.  
			char K[] = new char[sc.nextInt()];
			String input = sc.next();
			
			for(int i = 0;i<input.length();i++){
				K[i]=input.charAt(i);
			}			
			//여기에 n의 점수를 어떻게 넣을 것인지.
			int x=0,y=0;
			N[0][0]=1; N[n-1][n-1]=n*n;
		
			
			for(x=1;x<n;x++){
				if(x%2==1) N[x][0] = N[x-1][0]+1;
				else if(x%2==0) N[x][0] = N[x-1][0]+2*x;
			}
			for(x=n-2;x>0;x--){
				if((n-x)%2==0)	N[x][n-1]=N[x+1][n-1]-1;
				else	N[x][n-1]=N[x+1][n-1]-2*(n-x-1);
			}
			
			for(y=1;y<n;y++){
				for(x=0;x<n-1&&(x+y)<n;x++){
					if((x+y)%2==0)	N[x][y] = N[x+1][y-1]-1;
					else	N[x][y] = N[x+1][y-1]+1;						
				}
			}
			
			for(y=n-2;y>0;y--){
				for(x=2; x<=(n-1); x++){
					if((x+y) >= n){
					if((x+y)%2==0)	N[x][y] = N[x-1][y+1]+1;
					else	N[x][y] = N[x-1][y+1]-1;	}
				}
			}
			x=0; y=0;
			for(int i=0;i<K.length;i++){
				if(K[i]=='U')	y=y-1;
				else if(K[i]=='D')	y=y+1;
				else if(K[i]=='L')	x=x-1;
				else if(K[i]=='R')	x=x+1;
				result+=N[x][y];
			}
			// 이 부분에서 정답을 출력하십시오.
			System.out.println("Case #" + test_case);
			System.out.println(result);
		}
	}
}
